package com.polypro.view;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.ImageIcon;
import javax.swing.Timer;

/**
 *
 * @author LAPTOP LENOVO
 */
public class HiJDialog extends javax.swing.JDialog implements Runnable {

    /**
     * Creates new form HiJDialog
     */
    public HiJDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
        Thread th;
        th = new Thread((Runnable) this);
        th.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        prbLoading = new javax.swing.JProgressBar();
        lblMsg = new javax.swing.JLabel();
        lblLoadingPercent = new javax.swing.JLabel();
        lblLoading = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setUndecorated(true);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });
        getContentPane().setLayout(new java.awt.GridLayout());

        jPanel1.setBackground(new java.awt.Color(238, 238, 238));
        jPanel1.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(21, 71, 133), 3, true));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        lblMsg.setFont(new java.awt.Font("Tahoma", 2, 18)); // NOI18N
        lblMsg.setForeground(new java.awt.Color(21, 71, 133));
        lblMsg.setText("Đang khởi động");

        lblLoadingPercent.setBackground(new java.awt.Color(21, 71, 133));
        lblLoadingPercent.setFont(new java.awt.Font("Dialog", 0, 18)); // NOI18N
        lblLoadingPercent.setText("0%");

        lblLoading.setBackground(new java.awt.Color(255, 255, 255));
        lblLoading.setForeground(new java.awt.Color(255, 255, 255));
        lblLoading.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/polypro/view/icon/education_loading.gif"))); // NOI18N
        lblLoading.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblLoading)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(prbLoading, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblMsg)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(lblLoadingPercent, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(lblLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 327, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(7, 7, 7)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMsg)
                    .addComponent(lblLoadingPercent))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(prbLoading, javax.swing.GroupLayout.PREFERRED_SIZE, 8, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        getContentPane().add(jPanel1);

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
//        new Timer(20, new ActionListener() {
//            @Override
//            public void actionPerformed(ActionEvent e) {
//                int value = prbLoading.getValue();
//                if (value < 100) {
//                    try {
//                        if (value == 10) {
//                            lblMsg.setText("Đang khởi động.");
//                        }
//                        if (value == 20) {
//                            lblMsg.setText("Đang khởi động..");
//                        }
//                        if (value == 30) {
//                            lblMsg.setText("Đang khởi động...");
//                        }
//                        if (value == 40) {
//                            Thread.sleep(300);
//                            lblMsg.setText("Đang tải cơ sở dữ liệu.");
//                        }
//                        if (value == 55) {
//                            Thread.sleep(600);
//                            lblMsg.setText("Đang tải cơ sở dữ liệu..");
//                        }
//
//                        if (value == 80) {
//                            lblMsg.setText("Hoàn thành tải tài nguyên người dùng...");
//                            Thread.sleep(800);
//
//                        }
//                        if (value == 85) {
//                            Thread.sleep(1500);
//                            lblMsg.setText("Đang mở ứng dụng");
//
//                        }
//                        prbLoading.setValue(value + 1);
//                        lblLoadingPercent.setText(String.valueOf(value) + "%");
//                    } catch (InterruptedException ex) {
//                        Logger.getLogger(HiJDialog.class.getName()).log(Level.SEVERE, null, ex);
//                    }
//                } else {
//                    HiJDialog.this.dispose();
//                }
//            }
//        }).start();

    }//GEN-LAST:event_formWindowActivated

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HiJDialog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                HiJDialog dialog = new HiJDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JLabel lblLoading;
    private javax.swing.JLabel lblLoadingPercent;
    private javax.swing.JLabel lblMsg;
    private javax.swing.JProgressBar prbLoading;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        try {
            for (int i = 0; i <= 101; i++) {
                int value = prbLoading.getValue();
                prbLoading.setValue(i);
                lblLoadingPercent.setText(String.valueOf(value) + "%");
                if (value < 100) {
                    if (value == 10) {
                        lblMsg.setText("Đang khởi động.");
                    }
                    if (value == 20) {
                        lblMsg.setText("Đang khởi động..");
                    }
                    if (value == 30) {
                        lblMsg.setText("Đang khởi động...");
                    }
                    if (value == 40) {
                        lblMsg.setText("Đang tải cơ sở dữ liệu.");
                        Thread.sleep(1000);

                    }
                    if (value == 55) {
                        lblMsg.setText("Đang tải cơ sở dữ liệu..");
                    }

                    if (value == 80) {
                        lblMsg.setText("Hoàn thành tải tài nguyên người dùng...");
                    }
                    if (value == 95) {
                        lblMsg.setText("Đang mở ứng dụng");
                        Thread.sleep(1000);
                    }
                } else {
                    this.dispose();
                }
                Thread.sleep(80);
            }
        } catch (Exception e) {
        }
    }
}
